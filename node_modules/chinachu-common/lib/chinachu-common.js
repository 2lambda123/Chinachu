/*!
 *  Chinachu Common Module (node-chinachu-common)
 *
 *  Copyright (c) 2012 Yuki KAN and Chinachu Project Contributors
 *  http://chinachu.akkar.in/
**/

var fs     = require('fs');
var crypto = require('crypto');

exports.jsonWatcher = function(filepath, callback, option) {
	if (typeof option === 'undefined') option = {};
	
	option.wait = option.wait || 1000;
	
	if (!fs.existsSync(filepath)) {
		if (option.create) {
			fs.writeFileSync(filepath, JSON.stringify(option.create));
		} else {
			callback('FATAL: `' + filepath + '` is not exists.', null, null);
			return;
		}
	}
	
	function read() {
		try {
			if (typeof require.cache[filepath] !== 'undefined') delete require.cache[filepath];
			
			var data = require(filepath);
			callback(null, data, 'READ: `' + filepath + '` is updated.');
		} catch (e) {
			callback('WARN: `' + filepath + '` is invalid. (' + e + ')', null, null);
		}
	}
	
	if (option.now) read();
	
	var timer;
	function onUpdated() {
		clearTimeout(timer);
		timer = setTimeout(read, option.wait);
	}
	fs.watch(filepath, onUpdated);
};

exports.getProgramById = function(id, array) {
	if (array[0].programs) {
		array = (function() {
			var programs = [];
			
			array.forEach(function(ch) {
				programs = programs.concat(ch.programs);
			});
			
			return programs;
		})();
	}
	
	return (function() {
		var x = null;
		
		array.forEach(function(a) {
			if (a.id === id) { x = a; }
		});
		
		return x;
	})();
};